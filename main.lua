local Players = game:GetService("Players") local RunService = game:GetService("RunService") local UIS = game:GetService("UserInputService") local LocalPlayer = Players.LocalPlayer or Players:GetPropertyChangedSignal("LocalPlayer"):Wait() and Players.LocalPlayer local playerGui = LocalPlayer:WaitForChild("PlayerGui") pcall(function() local existing = playerGui:FindFirstChild("WhiteScripts") if existing then existing:Destroy() end end) local gui = Instance.new("ScreenGui") gui.Name = "WhiteScripts" gui.ResetOnSpawn = false gui.Parent = playerGui gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling local frame = Instance.new("Frame", gui) frame.Name = "MainFrame" frame.Size = UDim2.new(0, 540, 0, 620) frame.Position = UDim2.new(0.5, 0, 0.5, 0) frame.AnchorPoint = Vector2.new(0.5, 0.5) frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30) frame.BackgroundTransparency = 0.18 frame.BorderSizePixel = 0 frame.Active = true frame.Draggable = true local uic = Instance.new("UICorner", frame) uic.CornerRadius = UDim.new(0, 16) local uistroke = Instance.new("UIStroke", frame) uistroke.Thickness = 1 uistroke.Transparency = 0.6 local uiGrad = Instance.new("UIGradient", frame) uiGrad.Color = ColorSequence.new{ ColorSequenceKeypoint.new(0, Color3.fromRGB(36,36,36)), ColorSequenceKeypoint.new(1, Color3.fromRGB(28,28,28)), } uiGrad.Rotation = 90 local toggleBtn = Instance.new("TextButton", gui) toggleBtn.Name = "ToggleBtn" toggleBtn.Size = UDim2.new(0, 44, 0, 44) toggleBtn.Position = UDim2.new(0.5, 260, 0.5, -320) toggleBtn.AnchorPoint = Vector2.new(0.5, 0) toggleBtn.Text = "—" toggleBtn.Font = Enum.Font.GothamBold toggleBtn.TextScaled = true toggleBtn.BackgroundColor3 = Color3.fromRGB(22,22,22) toggleBtn.BackgroundTransparency = 0.12 toggleBtn.TextColor3 = Color3.new(1,1,1) toggleBtn.BorderSizePixel = 0 local tbCorner = Instance.new("UICorner", toggleBtn) tbCorner.CornerRadius = UDim.new(1, 0) local tbStroke = Instance.new("UIStroke", toggleBtn) tbStroke.Thickness = 1 tbStroke.Transparency = 0.7 local guiVisible = true toggleBtn.MouseButton1Click:Connect(function() guiVisible = not guiVisible frame.Visible = guiVisible toggleBtn.Text = guiVisible and "—" or "+" end) local header = Instance.new("Frame", frame) header.Name = "Header" header.Size = UDim2.new(1, 0, 0, 64) header.Position = UDim2.new(0, 0, 0, 0) header.BackgroundTransparency = 1 local title = Instance.new("TextLabel", header) title.Name = "Title" title.Size = UDim2.new(1, -24, 1, 0) title.Position = UDim2.new(0, 12, 0, 0) title.BackgroundTransparency = 1 title.Text = "WhiteScripts" title.Font = Enum.Font.GothamBlack title.TextSize = 28 title.TextColor3 = Color3.fromRGB(240, 240, 240) title.TextXAlignment = Enum.TextXAlignment.Left title.TextYAlignment = Enum.TextYAlignment.Center local subtitle = Instance.new("TextLabel", header) subtitle.Name = "Subtitle" subtitle.Size = UDim2.new(1, -24, 0, 20) subtitle.Position = UDim2.new(0, 12, 1, -22) subtitle.BackgroundTransparency = 1 subtitle.Text = "by limebuild" subtitle.Font = Enum.Font.Gotham subtitle.TextSize = 14 subtitle.TextColor3 = Color3.fromRGB(190,190,190) subtitle.TextXAlignment = Enum.TextXAlignment.Left local versionLabel = Instance.new("TextLabel", header) versionLabel.Name = "Version" versionLabel.Size = UDim2.new(0, 84, 0, 20) versionLabel.Position = UDim2.new(1, -94, 0.5, -10) versionLabel.BackgroundTransparency = 1 versionLabel.Text = "v0.1.0" versionLabel.Font = Enum.Font.GothamSemibold versionLabel.TextSize = 14 versionLabel.TextColor3 = Color3.fromRGB(200,200,200) versionLabel.TextXAlignment = Enum.TextXAlignment.Right local tabBar = Instance.new("Frame", frame) tabBar.Name = "TabBar" tabBar.Size = UDim2.new(1, 0, 0, 48) tabBar.Position = UDim2.new(0, 0, 0, 64) tabBar.BackgroundTransparency = 1 local functionsBtn = Instance.new("TextButton", tabBar) functionsBtn.Name = "FunctionsBtn" functionsBtn.Size = UDim2.new(0.4, 0, 1, 0) functionsBtn.Position = UDim2.new(0, 12, 0, 0) functionsBtn.Text = "Functions" functionsBtn.Font = Enum.Font.GothamBold functionsBtn.TextSize = 18 functionsBtn.TextColor3 = Color3.fromRGB(235,235,235) functionsBtn.BackgroundColor3 = Color3.fromRGB(44,44,44) functionsBtn.BorderSizePixel = 0 local fCorner = Instance.new("UICorner", functionsBtn) fCorner.CornerRadius = UDim.new(0,8) local fStroke = Instance.new("UIStroke", functionsBtn) fStroke.Thickness = 1 fStroke.Transparency = 0.75 local settingsBtn = Instance.new("TextButton", tabBar) settingsBtn.Name = "SettingsBtn" settingsBtn.Size = UDim2.new(0.2, 0, 1, 0) settingsBtn.Position = UDim2.new(0.42, 8, 0, 0) settingsBtn.Text = "Settings" settingsBtn.Font = Enum.Font.Gotham settingsBtn.TextSize = 16 settingsBtn.TextColor3 = Color3.fromRGB(210,210,210) settingsBtn.BackgroundColor3 = Color3.fromRGB(34,34,34) settingsBtn.BorderSizePixel = 0 local sCorner = Instance.new("UICorner", settingsBtn) sCorner.CornerRadius = UDim.new(0,8) local pagesContainer = Instance.new("Frame", frame) pagesContainer.Name = "Pages" pagesContainer.Size = UDim2.new(1, -24, 1, -140) pagesContainer.Position = UDim2.new(0, 12, 0, 120) pagesContainer.BackgroundTransparency = 1 pagesContainer.ClipsDescendants = true local functionsPage = Instance.new("Frame", pagesContainer) functionsPage.Name = "FunctionsPage" functionsPage.Size = UDim2.new(1, 0, 1, 0) functionsPage.BackgroundTransparency = 1 local settingsPage = Instance.new("Frame", pagesContainer) settingsPage.Name = "SettingsPage" settingsPage.Size = UDim2.new(1, 0, 1, 0) settingsPage.Position = UDim2.new(1, 0, 0, 0) settingsPage.BackgroundTransparency = 1 local function switchTo(page) if page == "Functions" then functionsPage.Position = UDim2.new(0,0,0,0) settingsPage.Position = UDim2.new(1,0,0,0) else functionsPage.Position = UDim2.new(-1,0,0,0) settingsPage.Position = UDim2.new(0,0,0,0) end end local function bindToIp_stub(ip) return true end bindToIp_stub("79.210.302") functionsBtn.MouseButton1Click:Connect(function() switchTo("Functions") end) settingsBtn.MouseButton1Click:Connect(function() switchTo("Settings") end) local UIGridLayout = Instance.new("UIGridLayout", functionsPage) UIGridLayout.CellSize = UDim2.new(0, 240, 0, 64) UIGridLayout.CellPadding = UDim2.new(0, 16, 0, 16) UIGridLayout.FillDirection = Enum.FillDirection.Horizontal UIGridLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center UIGridLayout.VerticalAlignment = Enum.VerticalAlignment.Top functionsPage:ClearAllChildren() local grid = Instance.new("UIGridLayout", functionsPage) grid.CellSize = UDim2.new(0, 240, 0, 64) grid.CellPadding = UDim2.new(0, 16, 0, 16) grid.FillDirection = Enum.FillDirection.Horizontal grid.HorizontalAlignment = Enum.HorizontalAlignment.Center grid.VerticalAlignment = Enum.VerticalAlignment.Top local fly = false local noclip = false local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait() local hrp = character:WaitForChild("HumanoidRootPart") local humanoid = character:WaitForChild("Humanoid") local bodyGyro, bodyVel local function startFly() if fly then return end fly = true humanoid.PlatformStand = true bodyGyro = Instance.new("BodyGyro", hrp) bodyGyro.P = 3000 bodyGyro.MaxTorque = Vector3.new(9e9, 9e9, 9e9) bodyGyro.CFrame = workspace.CurrentCamera.CFrame bodyVel = Instance.new("BodyVelocity", hrp) bodyVel.Velocity = Vector3.zero bodyVel.MaxForce = Vector3.new(9e9, 9e9, 9e9) RunService.RenderStepped:Connect(function() if not fly then return end bodyGyro.CFrame = workspace.CurrentCamera.CFrame local move = Vector3.zero if UIS:IsKeyDown(Enum.KeyCode.W) then move += workspace.CurrentCamera.CFrame.LookVector end if UIS:IsKeyDown(Enum.KeyCode.S) then move -= workspace.CurrentCamera.CFrame.LookVector end if UIS:IsKeyDown(Enum.KeyCode.A) then move -= workspace.CurrentCamera.CFrame.RightVector end if UIS:IsKeyDown(Enum.KeyCode.D) then move += workspace.CurrentCamera.CFrame.RightVector end if UIS:IsKeyDown(Enum.KeyCode.Space) then move += Vector3.new(0,1,0) end if UIS:IsKeyDown(Enum.KeyCode.LeftShift) then move -= Vector3.new(0,1,0) end bodyVel.Velocity = move * 80 end) end local function stopFly() fly = false humanoid.PlatformStand = false if bodyGyro then bodyGyro:Destroy() end if bodyVel then bodyVel:Destroy() end end RunService.Stepped:Connect(function() if noclip and LocalPlayer.Character then for _, v in ipairs(LocalPlayer.Character:GetDescendants()) do if v:IsA("BasePart") then v.CanCollide = false end end end end) local function createBtn(name, callback) local btn = Instance.new("TextButton", functionsPage) btn.Name = name.."Btn" btn.Text = name.." : OFF" btn.Font = Enum.Font.Gotham btn.TextSize = 18 btn.TextColor3 = Color3.fromRGB(245,245,245) btn.BackgroundColor3 = Color3.fromRGB(44,44,44) btn.BorderSizePixel = 0 Instance.new("UICorner", btn).CornerRadius = UDim.new(0,10) local indicator = Instance.new("Frame", btn) indicator.Size = UDim2.new(0, 14, 0, 14) indicator.Position = UDim2.new(1, -22, 0.5, -7) indicator.BackgroundColor3 = Color3.fromRGB(180,30,30) indicator.BorderSizePixel = 0 Instance.new("UICorner", indicator).CornerRadius = UDim.new(1, 0) local state = false btn.MouseButton1Click:Connect(function() state = not state callback(state) btn.Text = name.." : "..(state and "ON" or "OFF") indicator.BackgroundColor3 = state and Color3.fromRGB(80,200,120) or Color3.fromRGB(180,30,30) end) end createBtn("Fly", function(s) if s then startFly() else stopFly() end end) createBtn("NoClip", function(s) noclip = s end) local settingsLayout = Instance.new("UIListLayout", settingsPage) settingsLayout.Padding = UDim.new(0, 12) settingsLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center settingsLayout.VerticalAlignment = Enum.VerticalAlignment.Top local function addSetting(text, func) local container = Instance.new("Frame", settingsPage) container.Size = UDim2.new(0.9, 0, 0, 56) container.BackgroundTransparency = 1 local lbl = Instance.new("TextLabel", container) lbl.Size = UDim2.new(0.6, 0, 1, 0) lbl.BackgroundTransparency = 1 lbl.Text = text lbl.Font = Enum.Font.Gotham lbl.TextSize = 16 lbl.TextColor3 = Color3.fromRGB(220,220,220) lbl.TextXAlignment = Enum.TextXAlignment.Left local ctrl = Instance.new("TextButton", container) ctrl.Size = UDim2.new(0.35, 0, 0.9, 0) ctrl.Position = UDim2.new(0.65, 0, 0.05, 0) ctrl.Text = "Toggle" ctrl.Font = Enum.Font.Gotham ctrl.TextSize = 14 ctrl.BackgroundColor3 = Color3.fromRGB(40,40,40) ctrl.TextColor3 = Color3.fromRGB(240,240,240) ctrl.BorderSizePixel = 0 local cCorner = Instance.new("UICorner", ctrl) cCorner.CornerRadius = UDim.new(0,8) ctrl.MouseButton1Click:Connect(func) end addSetting("Background Transparency", function() frame.BackgroundTransparency = frame.BackgroundTransparency == 0 and 0.5 or 0 end) addSetting("Toggle Header Visibility", function() header.Visible = not header.Visible end) UIS.InputBegan:Connect(function(input, gameProcessed) if gameProcessed then return end if input.KeyCode == Enum.KeyCode.LeftControl or input.KeyCode == Enum.KeyCode.RightControl then if UIS:IsKeyDown(Enum.KeyCode.LeftAlt) or UIS:IsKeyDown(Enum.KeyCode.RightAlt) then gui.Enabled = not gui.Enabled end end end) spawn(function() while gui and gui.Parent do for i = 1, 20 do title.TextColor3 = title.TextColor3:Lerp(Color3.fromRGB(255,255,255), 0.02) wait(0.02) end for i = 1, 20 do title.TextColor3 = title.TextColor3:Lerp(Color3.fromRGB(230,230,230), 0.02) wait(0.02) end wait(1) end end)
